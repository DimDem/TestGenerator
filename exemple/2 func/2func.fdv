        PROGRAM    JAC
        PARAMETER    (L=8,  ITMAX=20)
        REAL     A(L,L), EPS, MAXEPS, B(L,L)
C		 arrays A and B  with block distribution 

        PRINT *,  '**********  TEST_JACOBI   **********'
                  MAXEPS  =  0.5E - 7
C		nest of two parallel loops, iteration (i,j) will be executed on 
C		processor, which is owner of element A(i,j) 
            DO  1   J  =  1, L
            DO  1   I  =  1, L
                A(I,  J)  =  0.
                IF(I.EQ.1 .OR. J.EQ.1 .OR. I.EQ.L .OR. J.EQ.L) THEN
                      B(I,  J) = 0.
                ELSE
                      B(I,  J)  = ( 1. + I + J )
                ENDIF
    1       CONTINUE
        DO  2   IT  =  1,  ITMAX
                  EPS  =  0.
C		variable EPS is used for calculation of maximum value
                  DO  21  J  =  2, L-1
                  DO  21  I  =  2, L-1
                         EPS = MAX ( EPS,  ABS( B( I, J)  -  A( I, J)))
                         A(I, J)  =  B(I, J)
   21             CONTINUE
C		Copying shadow elements of array A from 
C		neighbouring processors before loop execution
                  DO  22  J = 2,  L-1
                  DO  22  I = 2,  L-1
        B(I, J) =  (A( I-1, J ) + A( I, J-1 ) + A( I+1, J)+
     *                        A( I, J+1 )) / 4
   22             CONTINUE
                  PRINT 200,  IT, EPS
200               FORMAT(' IT = ',I4, '   EPS = ', E14.7)
                  IF ( EPS . LT . MAXEPS )    GO TO   3
    2   CONTINUE
    3   OPEN (3, FILE='JAC.DAT', FORM='FORMATTED', STATUS='UNKNOWN')
        WRITE (3,*)   B
        CLOSE (3)
        END

       PROGRAM GAUSF
       PARAMETER   ( N = 10 )
       REAL   A( N, N+1 ),X( N )
C		section A(1:N,1:N)   - matrix of coefficients "A"
C		section A(1:N,N+1) - vector of free members "b"
       PRINT *,  '**********   TEST_GAUSS   **********'
       DO 100 I=1,N
       DO 100 J=1,N+1
       IF (I .EQ. J) THEN
         A(I,J)=2.0
       ELSE
         IF (J .EQ. N+1)   THEN
           A(I,J)=1.0
         ELSE
           A(I,J)=0.0
       ENDIF
       ENDIF   
  100  CONTINUE 
C
C       ELIMINATION
C
        DO  1  I = 1, N-1

C		the i-th row of array A will be buffered before
C		execution of i-th iteration, and reference A(I,K) 
C		will be replaced with corresponding reference to buffer 
                  DO  5  J = I+1, N
                  DO  5  K = I+1, N+1
        A( J, K ) = A( J, K ) - A( J, I ) * A( I, K ) / A( I, I )
    5             CONTINUE
    1   CONTINUE
        X( N ) = A( N, N+1 ) / A( N, N )
C       BACK SUBSTITUTION
C
        DO  6  J = N-1, 1, -1
C		the (j+1)-th elements of array X will be buffered before
C		execution of j-th iteration, and reference X(J+1) 
C		will be replaced with reference to temporal variable
                  DO  7  I = 1, J
                     A( I, N+1 )  = A( I, N+1 ) - A( I,J+1)*X(J+1)
    7             CONTINUE
        X( J ) = A( J,  N+1 ) / A( J, J)
    6   CONTINUE
        PRINT *, X
        END
